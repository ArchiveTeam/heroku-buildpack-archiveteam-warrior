#!/usr/bin/env bash
set -eo pipefail

BUILD_DIR=$1
CACHE_DIR=$2

BINARIES_URL=http://warriorhq.archiveteam.org/downloads/heroku-binaries/warrior-binaries-LATEST.tar.gz
BINARIES_FILE=$CACHE_DIR/warrior-binaries.tar.gz

mkdir -p $CACHE_DIR

if [ ! -f $BINARIES_FILE ] ; then
  echo "-----> Downloading Wget+Lua and rsync binaries"
  if ! curl -s -L $BINARIES_URL -o $CACHE_DIR/warrior-binaries.tar.gz ; then
    echo " !     Couldn't download the binaries file."
    exit 1
  fi
fi

echo "-----> Installing Wget+Lua and rsync"

mkdir -p $BUILD_DIR/.archiveteam
cd $BUILD_DIR/.archiveteam
if ! tar xzf $CACHE_DIR/warrior-binaries.tar.gz ; then
  echo " !     Couldn't extract the binaries file."
  exit 2
fi

# set the path
mkdir -p "$BUILD_DIR/.profile.d"
echo 'export PATH=$HOME/.archiveteam:$PATH' >> "$BUILD_DIR/.profile.d/archiveteam.sh"

# ask the Python buildpack to install the seesaw kit
echo -e "\nseesaw\n" >> $BUILD_DIR/requirements.txt

# make a link to wget-lua so the seesaw kit can find it
ln -s .archiveteam/wget-lua $BUILD_DIR/wget-lua

# write the boot script
cat >> $BUILD_DIR/start-warrior.sh << EOF
#!/bin/bash
set -e

if [ -z "\$WARRIOR_PROJECT" ] ; then
  echo "Set the WARRIOR_PROJECT configuration variable to the project's Git repository."
  exit 1
fi

if [ -z "\$WARRIOR_DOWNLOADER" ] ; then
  echo "Set the WARRIOR_DOWNLOADER configuration variable to your nickname."
  exit 1
fi

if [ -z "\$WARRIOR_MAX_ITEMS" ] ; then
  WARRIOR_MAX_ITEMS=100
  exit 1
fi

if [ -z "\$WARRIOR_CONCURRENT" ] ; then
  WARRIOR_CONCURRENT=2
  exit
fi

git clone \$WARRIOR_PROJECT project
cd project

run-pipeline \
  --concurrent \$WARRIOR_CONCURRENT \
  --max-items \$WARRIOR_MAX_ITEMS \
  --disable-web-server \
  pipeline.py \$WARRIOR_DOWNLOADER

EOF
chmod +x $BUILD_DIR/start-warrior.sh


# the remainder is baed on heroku-buildpack-multi
# it installs the Python buildpack

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

unset GIT_DIR

dir=$(mktemp -t python-buildpackXXXXX)
rm -rf $dir

url="https://github.com/heroku/heroku-buildpack-python.git"
echo "-----> Downloading Python buildpack: $url"
git clone $url $dir >/dev/null 2>&1
cd $dir

chmod +x $dir/bin/{detect,compile,release}

framework=$($dir/bin/detect $1)

if [ $? == 0 ]; then
  echo "-----> Detected framework: $framework"
  $dir/bin/compile $BUILD_DIR $CACHE_DIR

  if [ $? != 0 ]; then
    exit 1
  fi
else
  echo " !     Did not detect Python framework."
fi

echo
echo "-----> Successfully installed the Archive Team Warrior buildpack"
echo
echo "       You'll need to set two configuration variables (heroku config:set):"
echo "         WARRIOR_PROJECT      the URL to the Git repository of the project"
echo "         WARRIOR_DOWNLOADER   your nickname"
echo
echo "       You can optionally set:"
echo "         WARRIOR_CONCURRENT   the number of concurrent items (default: 2)"
echo "         WARRIOR_MAX_ITEMS    the number of items to download before"
echo "                              restarting the instance (default: 100)"
echo
echo "       To start an instance:"
echo "         heroku ps:scale seesaw=1"
echo

